<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
           ">
    <!--组件扫描,扫描controller包-->
    <context:component-scan base-package="com.itheima.controller"></context:component-scan>


    <!--释放静态资源的访问权限-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>


    <!--内部资源视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- JSP文件所在的目录 -->
        <property name="prefix" value="/pages/" />
        <!-- 文件的后缀名 -->
        <property name="suffix" value=".jsp" />
    </bean>

    <!--注解驱动:
       开启对SpringMVC注解的支持 使用`<mvc:annotation-driven />`自动加载 RequestMappingHandlerMapping（处理映射器）和
       RequestMappingHandlerAdapter（ 处 理 适 配 器 ），可用在Spring-xml.xml配置文件中使用
       `<mvc:annotation-driven />`替代注解处理器和适配器的配置。同时使用`<mvc:annotation-driven />`
       默认底层就会集成jackson进行对象或集合的json格式字符串的转换
    -->
    <mvc:annotation-driven></mvc:annotation-driven>

    <!--
		支持AOP的注解支持，AOP底层使用代理技术
		JDK动态代理，要求必须有接口
		cglib代理，生成子类对象，proxy-target-class="true" 默认使用cglib的方式
	-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>